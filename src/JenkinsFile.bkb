pipeline {
   agent any

    tools {nodejs "node"}
    environment{
        DOCKER_USERNAME = credentials('DOCKER_USERNAME')
        DOCKER_PASSWORD = credentials('DOCKER_PASSWORD')
    }
    stages {
        stage('Preparation') {
            steps{
                echo "BRANCH: ${env.BRANCH_NAME}"
                sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
            }
        }
        
        stage ('Testing') {
            steps {
                script {
                    sh '''
                        #!/bin/bash
                        npm install ----legacy-peer-deps
                        npm run lint
                    '''
                }
            }
        }

        stage('Docker build & push') {
            steps{
                script {
                    if (env.BRANCH_NAME == 'master') {
                        echo 'building master';
                        sh '''
                            #!/bin/bash
                            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                            docker-compose -f docker-compose.prod.yml build 
                            docker push reelcruitapp/reelcruit-candidate-frontend
                            docker tag reelcruitapp/reelcruit-candidate-frontend reelcruitapp/reelcruit-candidate-frontend:$BUILD_NUMBER
                            docker push reelcruitapp/reelcruit-candidate-frontend:$BUILD_NUMBER
                        '''
                    }
                    else if (env.BRANCH_NAME == 'test') {
                            echo 'Building test';
                            sh '''
                                #!/bin/bash
                                docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                                docker-compose -f docker-compose.test.yml build
                                docker tag reelcruitapp/reelcruit-candidate-frontend:test reelcruitapp/reelcruit-candidate-frontend:test
                                docker push reelcruitapp/reelcruit-candidate-frontend:test
                            '''   
                    }
                    else if (env.BRANCH_NAME == 'staging') {
                            echo 'Building staging';
                            sh '''
                                #!/bin/bash
                                docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                                docker-compose -f docker-compose.staging.yml build
                                docker tag reelcruitapp/reelcruit-candidate-frontend:staging reelcruitapp/reelcruit-candidate-frontend:staging
                                docker push reelcruitapp/reelcruit-candidate-frontend:staging
                            '''   
                        }
                    else {
                        sh '''
                            #!/bin/bash
                            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD' 
                        '''
                        echo 'Log in is SUCCESSFUL'
                    }
                }
            }
        }

        stage('Deploy') {
            when {
                expression {
                    return env.BRANCH_NAME == 'master' || env.BRANCH_NAME == 'test' || env.BRANCH_NAME == 'staging'
                }
            }

            steps{
                script {
                    if (env.BRANCH_NAME == 'master') {
                        sh '''
                        #!/bin/bash
                            #get kubectl
                            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
                            chmod +x ./kubectl
                            ./kubectl apply -f ./manifest/deployment.prod.yaml
                            ./kubectl get cm -A
                        '''
                    }
                    else if (env.BRANCH_NAME == 'test') {
                        sh '''
                        #!/bin/bash
                            #get kubectl
                            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
                            chmod +x ./kubectl
                            ./kubectl apply -f ./manifest/deployment.test.yaml
                            ./kubectl get cm -A
                        '''
                    }
                    else if (env.BRANCH_NAME == 'staging') {
                        sh '''
                        #!/bin/bash
                            #get kubectl
                            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
                            chmod +x ./kubectl
                            ./kubectl apply -f ./manifest/deployment.staging.yaml
                            ./kubectl get cm -A
                        '''
                    }
                }
            }
        }

        stage('Start') {
            when {
                expression {
                    return env.BRANCH_NAME == 'master' || env.BRANCH_NAME == 'test' || env.BRANCH_NAME == 'staging'
                }
            }
            steps{
                script {
                    if (env.BRANCH_NAME == 'master') {
                        sh '''
                        #!/bin/bash
                        ./kubectl rollout restart deployment reelcruit-candidate -n produuction 
                        '''
                    }
                    else if (env.BRANCH_NAME == 'test') {
                        sh '''
                        #!/bin/bash
                         ./kubectl rollout restart deployment reelcruit-candidate-test -n test
                        '''
                    }
                    else if (env.BRANCH_NAME == 'staging') {
                        sh '''
                        #!/bin/bash
                        ./kubectl rollout restart deployment reelcruit-candidate-staging -n staging
                        '''
                    }
                }
            }
        }
    }
}
