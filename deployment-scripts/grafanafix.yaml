apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  labels:
    app: grafana
  namespace: prometheus
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: grafana
---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: grafana-deployment
#   namespace: grafana 
# spec:
#   selector:
#     matchLabels:
#       app: grafana
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: grafana
#     spec:
#       containers:
#       - name: grafana
#         image: grafana/grafana:latest
#         ports:
#         - name: http
#           containerPort: 3000
#         env:
#         - name: GF_SECURITY_ADMIN_PASSWORD
#           value: admin
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
  namespace: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: datasources
          mountPath: /etc/grafana/provisioning/datasources
      volumes:
      - name: datasources
        configMap:
          name: datasources
          items:
          - key: datasources.yaml
            path: datasources.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: datasources
  namespace: prometheus
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-server.prometheus.svc.cluster.local
      access: proxy
      isDefault: true